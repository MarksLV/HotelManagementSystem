name: Java CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 17 (Temurin)
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Download and Setup JavaFX SDK
        run: |
          wget https://download2.gluonhq.com/openjfx/17.0.2/openjfx-17.0.2_linux-x64_bin-sdk.zip
          unzip openjfx-17.0.2_linux-x64_bin-sdk.zip
          
          # List all JAR files to verify
          find javafx-sdk-17.0.2/lib -name "*.jar"
      
      - name: Compile Java Application
        run: |
          # Ensure the output directory exists
          mkdir -p out
          
          # List all JavaFX jar files to be used
          JAVAFX_JARS=$(find javafx-sdk-17.0.2/lib -name "*.jar" | tr '\n' ':')
          
          # Compile with explicit module path and all JavaFX modules
          javac \
            --module-path javafx-sdk-17.0.2/lib \
            --add-modules javafx.base,javafx.controls,javafx.fxml,javafx.graphics,javafx.scene \
            -classpath "$JAVAFX_JARS" \
            -d out src/application/*.java
      
      - name: Verify Compiled Classes
        run: |
          echo "Listing compiled classes:"
          find out -name "*.class"
      
      - name: Run Java Application
        run: |
          # Prepare JavaFX runtime modules
          JAVAFX_MODULES="javafx.base,javafx.controls,javafx.fxml,javafx.graphics,javafx.scene"
          
          # List all JavaFX jar files
          JAVAFX_JARS=$(find javafx-sdk-17.0.2/lib -name "*.jar" | tr '\n' ':')
          
          # Run the application
          java \
            --module-path javafx-sdk-17.0.2/lib \
            --add-modules "$JAVAFX_MODULES" \
            -classpath "$JAVAFX_JARS:out" \
            -Djava.awt.headless=true \
            application.Main
